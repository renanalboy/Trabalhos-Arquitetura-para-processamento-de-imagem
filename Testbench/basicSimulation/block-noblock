- inverter ordem das atribuções blocantes
/*-------------------------------------------------------------------------------------------*/

//Blocante

//Sem inversão
module exampleBlocking1 (D, CLK, Q1, Q2)
    input D, CLK;
    output Q1, Q2;
    reg Q1, Q2;
    
    always @(posedge CLK)
    begin    
      Q1 = D;
      Q2 = Q1;
      
    end
endmodule

//Com inversão
module exampleBlocking1 (D, CLK, Q1, Q2)
    input D, CLK;
    output Q1, Q2;
    reg Q1, Q2;
    
    always @(posedge CLK)
    begin    
      Q1 = Q2;
      Q2 = D;
      
    end
endmodule

/*-------------------------------------------------------------------------------------------------*/

//Não Blocante
module exampleNoBlocking1 (D, CLK, Q1, Q2)
    input D, CLK;
    output Q1, Q2;
    reg Q1, Q2;
    
    always @(posedge CLK)
    begin
      Q1 <= D;
      Q2 <= Q1;
    end 
endmodule

/*---------------------------------------------------------------------------------------------------*/
//Blocante

//Sem inversão
module exampleBlocking2 (X1, X2, X3, CLK, f, g)
    
    input X1, X2, X3, CLK;
    output f, g;
    reg f, g;
    
    always @(posedge CLK)
    begin
      f = x1 & x2; 
      g = f | x3;
    end   
endmodule

/*-------------------------------------------------------------------------------------------------*/

//Não blocante
module exampleNoBlocking2 (X1, X2, X3, CLK, f, g)
    
    input X1, X2, X3, CLK;
    output f, g;
    reg f, g;
    
    always @(posedge CLK)
    begin
      f <= x1 & x2; 
      g <= f | x3;
    end   
endmodule

